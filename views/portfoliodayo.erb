<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/portfolio.css">
    <title>Oshi Portfolio</title>
</head>
<body>
    <div class="container">
        <div class="chart-container">
            <canvas id="oshikatsuChart" class="chart"></canvas>
            <div class="chart-label">#私の<br>推し活<br>ポートフォリオ</div>
        </div>
        <div class="speech-bubble">
            推し活総額の38%<br>lifeistechに費やしました
        </div>
       
        <div class="photo-gallery">
            <div class="photo-container" id="photo1">
                <img src="https://res.cloudinary.com/dknmmxgco/image/upload/v1724521977/tsdyfyaytsac1ezy9kze.png" alt="photo2">
                <img src="https://res.cloudinary.com/dknmmxgco/image/upload/v1724521950/wngf8rwz6xyy3pvlnkcq.png" alt="photo1">
            </div>
            <button class="arrow left">&#10094;</button>
            <button class="arrow right">&#10095;</button>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const oshiName = "lifeistech";
        const oshiPercentage = 38;
        const totalSpend = 1000; // Replace with database value

        // Pie Chart Setup
        const ctx = document.getElementById('oshikatsuChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: [`${oshiName}`, 'Others'],
                datasets: [{
                    label: 'Oshikatsu Portfolio',
                    data: [oshiPercentage, 100 - oshiPercentage],
                    backgroundColor: ['#00CFFF', '#E0E0E0']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                cutout: '70%',
            }
        });

      // 写真ギャラリーのスクリプト
// 画像取得
const images = document.querySelectorAll('img');
// キャプション取得（後日実装）
const caption = document.querySelector('.caption');

// 前に戻るボタンと次へ進むボタン要素
const prevBtn = document.querySelector('.left');
const nextBtn = document.querySelector('.right');

// 画像の数を変数に格納する
const totalImages = images.length;

// 表示する画像を指定するための変数
let imageIndex = 0;

// 初期表示時に最初の画像のみを表示する
images.forEach((image, index) => {
  if (index !== imageIndex) {
    image.style.display = 'none';
  }
});

// 次へ
nextBtn.addEventListener('click', () => {
  imageIndex++;
  if (imageIndex > totalImages - 1) {
    imageIndex = 0;
  }

  // すべての画像を非表示にした後、表示する画像のみを表示
  images.forEach(image => {
    image.style.display = 'none';
  });
  images[imageIndex].style.display = 'block';
  caption.innerHTML = images[imageIndex].alt;
});

// 前へ
prevBtn.addEventListener('click', () => {
  imageIndex--;
  if (imageIndex < 0) {
    imageIndex = totalImages - 1;
  }

  // すべての画像を非表示にした後、表示する画像のみを表示
  images.forEach(image => {
    image.style.display = 'none';
  });
  images[imageIndex].style.display = 'block';
  caption.innerHTML = images[imageIndex].alt;
});
        
         // Set the speech bubble color
         // User-specified color for the speech bubble
        const userColor = blue;
        
        // Set the speech bubble color
        const speechBubble = document.getElementById('speechBubble');
        speechBubble.style.backgroundColor = userColor;
        speechBubble.style.setProperty('--bubble-color', userColor);
    </script>
</body>
</html>